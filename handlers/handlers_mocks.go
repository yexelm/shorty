// Code generated by MockGen. DO NOT EDIT.
// Source: handlers.go

// Package handlers is a generated GoMock package.
package handlers

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLongerShorter is a mock of LongerShorter interface.
type MockLongerShorter struct {
	ctrl     *gomock.Controller
	recorder *MockLongerShorterMockRecorder
}

// MockLongerShorterMockRecorder is the mock recorder for MockLongerShorter.
type MockLongerShorterMockRecorder struct {
	mock *MockLongerShorter
}

// NewMockLongerShorter creates a new mock instance.
func NewMockLongerShorter(ctrl *gomock.Controller) *MockLongerShorter {
	mock := &MockLongerShorter{ctrl: ctrl}
	mock.recorder = &MockLongerShorterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLongerShorter) EXPECT() *MockLongerShorterMockRecorder {
	return m.recorder
}

// Longer mocks base method.
func (m *MockLongerShorter) Longer(short []byte) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Longer", short)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Longer indicates an expected call of Longer.
func (mr *MockLongerShorterMockRecorder) Longer(short interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Longer", reflect.TypeOf((*MockLongerShorter)(nil).Longer), short)
}

// Shorter mocks base method.
func (m *MockLongerShorter) Shorter(long []byte) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Shorter", long)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Shorter indicates an expected call of Shorter.
func (mr *MockLongerShorterMockRecorder) Shorter(long interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Shorter", reflect.TypeOf((*MockLongerShorter)(nil).Shorter), long)
}
